git reset [<mode>] [<commit>]

    This form resets the current branch head to <commit> and possibly updates the index (resetting it to the tree of <commit>) and the working tree depending on <mode>. If <mode> is omitted, defaults to --mixed. The <mode> must be one of the following:

    --soft

        Does not touch the index file or the working tree at all (but resets the head to <commit>, just like all modes do). This leaves all your changed files "Changes to be committed", as git status would put it.
    --mixed

        Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.

        If -N is specified, removed paths are marked as intent-to-add (see git-add[1]).
    --hard

        Resets the index and working tree. Any changes to tracked files in the working tree since <commit> are discarded.
    --merge

        Resets the index and updates the files in the working tree that are different between <commit> and HEAD, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between <commit> and the index has unstaged changes, reset is aborted.

        In other words, --merge does something like a git read-tree -u -m <commit>, but carries forward unmerged index entries.


* Remarks:
    if use git reset with some file path -> cannot use with mode. Ex:
        git reset [commit_ref | [-- file1 file2]

    => reset file1, file2 as same as 
